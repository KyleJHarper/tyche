1. Options
     a) Consider a config file or long options if too many options become an issue.
     b) Build a struct or something to hold the options and possibly link to it from the raw list?
     c) -i == Initialize ratio, as a percentage to give to raw: >1 <100
     d) -F == Fixed memory sizes.  No adaptive logic.  raw/comp lists won't be engine__balanced()'d
     e) -w == Workers to use, defaults to number of CPUs
     f) -t == Time to spend running the test, in seconds.
     g) -h == Hit ratio (minimum) to aim for.  (Only use known buffers when ratio too low)
     h) -b == Bytes to limit data set to.  (Can point to large dir and stop at X bytes)
2. Manager
     a) A new structure to manage the lists.  Functions for list review and adjustment.
     b) The primary function, manager__analyze(), is where ACCRS logic should do the real magic.
     c) Manager should be disabled when -F is specified.
     d) Manager should log output of decisions and supporting data.
     e) Research options to accommodate aging and if it's even necessary (newer buffers == more likely to reuse?)
     f) Ensure that a scan protection element exists.
3. Reporting
     a) Totals: buffers read, per second, peak?, etc
     b) Buffer hits, misses/faults, and hit ratio.
